#!/bin/bash
#################################################################################
# Pulls the configurations
################################################################################
pull_config(){
	# echo -n "Pulling philconfig configurations : "
	pushd $CONFIG_DIR > /dev/null
	git pull > /dev/null 2>&1
	pull_success=$?
	popd > /dev/null
	if [[ $pull_success != 0 ]]; then
		echo "!! Could not pull pull philconfig !!"
	fi
}

################################################################################
# Uses find to go to a directory that is not in the PWD nor on CDPATH
# If the target is a directory, we go into it, if the target is a file, we go
# into the directory containing the file.
################################################################################
cdf(){
	result="$(find . -name "$1" -print -quit)"
	if [[ -d "$result" ]] ; then
		cd $result
		echo $(pwd) 1>&2
	elif [[ -f "$result" ]] ; then
		cd "$(dirname "$result")"
		echo $(pwd) 1>&2
	elif [[ $result == "" ]]; then
		echo "cdf: nothing found matching $1" 1>&2
	else
		echo "result $result could not be cd'd into" 1>&2
	fi
}

################################################################################
# Git push all branches to repository
################################################################################
pushall(){
	# Todo: upgrade this to prompt for each branch (asking y/n) whether we want
	# to push it.
	if [[ $1 == "" ]]; then
		remote=origin
	else
		remote=$1
	fi
	for b in $(git branch | tr '*' ' '); do
		echo -n "Push branch $b (y/n)? " 1>&2
		read answer
		if [[ "$answer" == y ]] ; then
			git push $remote $b;
		fi
	done
}


################################################################################
# Connects over ssh to school computer of my choice
################################################################################
ssh_school() {
	if [[ $1 == "" ]]; then
		computer="l4712-01"
	else
		computer=$1
	fi
	ssh $computer.info.polymtl.ca -l phcarb -Y
}

################################################################################
# Uses find to go to a directory that is not in the PWD nor on CDPATH
################################################################################
p_valgrind(){
	flags=$3
	cmd=$1
	if [ "$2" != "" ] ; then
		target=$2
	else
		target=~/valgrind.lst
	fi
	valgrind $flags $cmd > $target 2>&1
}


################################################################################
# Follows one level of link indirection.  The target must be a link otherwise
# readlink returns nothing.
################################################################################
cdl () {
	cd "$(dirname "$(readlink "$1")")";
}
